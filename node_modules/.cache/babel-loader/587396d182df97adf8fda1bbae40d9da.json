{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactJs\\\\quizapp\\\\src\\\\index.js\";\nimport React, { Component } from 'react';\nimport ReactDom from 'react-dom';\nimport \"./assets/style.css\";\nimport quizService from './quizService';\nimport QuestionBox from \"./components/questionBox\";\nimport Result from './components/Result';\n\nclass QuizApp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      questionBank: [],\n      score: 0,\n      responses: 0\n    };\n\n    this.getQuestions = () => {\n      quizService().then(question => {\n        this.setState({\n          questionBank: question\n        });\n      });\n    };\n\n    this.computeAnswer = (answer, correctAnswer) => {\n      if (answer === correctAnswer) {\n        this.setState({\n          score: this.state.score + 1\n        });\n      }\n\n      this.setState({\n        responses: this.state.responses < 5 ? this.state.responses + 1 : 5\n      });\n    };\n\n    this.playAgain = () => {\n      this.getQuestions();\n      this.setState({\n        score: 0,\n        responses: 0\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"QuizApp\"), this.state.questionBank.length > 0 && this.state.responses < 5 && this.state.questionBank.map(({\n      question,\n      answers,\n      correct,\n      questionId\n    }) => /*#__PURE__*/React.createElement(QuestionBox, {\n      question: question,\n      options: answers,\n      key: questionId,\n      selected: answer => this.computeAnswer(answer, correct),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    })), this.state.responses === 5 ? /*#__PURE__*/React.createElement(Result, {\n      score: this.state.score,\n      playAgain: this.playAgain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 52\n      }\n    }) : null);\n  }\n\n}\n\nReactDom.render( /*#__PURE__*/React.createElement(QuizApp, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["D:/reactJs/quizapp/src/index.js"],"names":["React","Component","ReactDom","quizService","QuestionBox","Result","QuizApp","state","questionBank","score","responses","getQuestions","then","question","setState","computeAnswer","answer","correctAnswer","playAgain","componentDidMount","render","length","map","answers","correct","questionId","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BM,KAD4B,GACpB;AACJC,MAAAA,YAAY,EAAE,EADV;AAEJC,MAAAA,KAAK,EAAE,CAFH;AAGJC,MAAAA,SAAS,EAAE;AAHP,KADoB;;AAAA,SAM5BC,YAN4B,GAMb,MAAM;AACjBR,MAAAA,WAAW,GAAGS,IAAd,CAAmBC,QAAQ,IAAI;AAC3B,aAAKC,QAAL,CAAc;AACVN,UAAAA,YAAY,EAAEK;AADJ,SAAd;AAGH,OAJD;AAKH,KAZ2B;;AAAA,SAa5BE,aAb4B,GAaZ,CAACC,MAAD,EAASC,aAAT,KAA2B;AACvC,UAAGD,MAAM,KAAKC,aAAd,EAA6B;AACzB,aAAKH,QAAL,CAAc;AACVL,UAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAX,GAAmB;AADhB,SAAd;AAGH;;AACD,WAAKK,QAAL,CAAc;AACVJ,QAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWG,SAAX,GAAuB,CAAvB,GAA2B,KAAKH,KAAL,CAAWG,SAAX,GAAuB,CAAlD,GAAsD;AADvD,OAAd;AAGH,KAtB2B;;AAAA,SAuB5BQ,SAvB4B,GAuBhB,MAAM;AACd,WAAKP,YAAL;AACA,WAAKG,QAAL,CAAc;AACVL,QAAAA,KAAK,EAAC,CADI;AAEVC,QAAAA,SAAS,EAAC;AAFA,OAAd;AAIH,KA7B2B;AAAA;;AA8B5BS,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,YAAL;AACH;;AACDS,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEK,KAAKb,KAAL,CAAWC,YAAX,CAAwBa,MAAxB,GAAiC,CAAjC,IACG,KAAKd,KAAL,CAAWG,SAAX,GAAuB,CAD1B,IAEG,KAAKH,KAAL,CAAWC,YAAX,CAAwBc,GAAxB,CAA4B,CAAC;AAACT,MAAAA,QAAD;AAAWU,MAAAA,OAAX;AAAoBC,MAAAA,OAApB;AAA6BC,MAAAA;AAA7B,KAAD,kBAC5B,oBAAC,WAAD;AACI,MAAA,QAAQ,EAAGZ,QADf;AAEI,MAAA,OAAO,EAAGU,OAFd;AAGI,MAAA,GAAG,EAAGE,UAHV;AAII,MAAA,QAAQ,EAAGT,MAAM,IAAI,KAAKD,aAAL,CAAmBC,MAAnB,EAA2BQ,OAA3B,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAJR,EAaS,KAAKjB,KAAL,CAAWG,SAAX,KAAyB,CAAzB,gBAA8B,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,KAA1B;AAAiC,MAAA,SAAS,EAAE,KAAKS,SAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9B,GAAiG,IAb1G,CADJ;AAiBH;;AAnD2B;;AAsDhChB,QAAQ,CAACkB,MAAT,eAAgB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA4BM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B","sourcesContent":["import React, {Component} from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport \"./assets/style.css\";\r\nimport quizService from './quizService';\r\nimport QuestionBox from \"./components/questionBox\";\r\nimport Result from './components/Result';\r\n\r\nclass QuizApp extends Component {\r\n    state = {\r\n        questionBank: [],\r\n        score: 0,\r\n        responses: 0\r\n    };\r\n    getQuestions = () => {\r\n        quizService().then(question => {\r\n            this.setState({\r\n                questionBank: question\r\n            });\r\n        });\r\n    };\r\n    computeAnswer = (answer, correctAnswer) => {\r\n        if(answer === correctAnswer) {\r\n            this.setState({\r\n                score: this.state.score + 1\r\n            });\r\n        }\r\n        this.setState({\r\n            responses: this.state.responses < 5 ? this.state.responses + 1 : 5\r\n        });\r\n    };\r\n    playAgain = () => {\r\n        this.getQuestions();\r\n        this.setState({\r\n            score:0,\r\n            responses:0\r\n        });\r\n    };\r\n    componentDidMount() {\r\n        this.getQuestions();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"title\">QuizApp</div>\r\n                {this.state.questionBank.length > 0 && \r\n                    this.state.responses < 5 &&\r\n                    this.state.questionBank.map(({question, answers, correct, questionId}) => ( \r\n                    <QuestionBox \r\n                        question= {question} \r\n                        options= {answers} \r\n                        key= {questionId}\r\n                        selected= {answer => this.computeAnswer(answer, correct)}\r\n                        />\r\n                    ))}\r\n\r\n                    {this.state.responses === 5 ? (<Result score={this.state.score} playAgain={this.playAgain} /> ) : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDom.render(<QuizApp/>, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}